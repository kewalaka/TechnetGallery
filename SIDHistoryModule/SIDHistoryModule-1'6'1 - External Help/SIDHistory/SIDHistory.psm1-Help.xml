<?xml version="1.0" encoding="utf-8"?><helpItems xmlns="http://msh" schema="maml">
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Convert-SIDHistoryNTFS</command:name>
		<maml:description>
			<maml:para>This function adds or replaces ACL SID entries based on a SID history mapping file.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Convert</command:verb>
		<command:noun>SIDHistoryNTFS</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function begins at the specified path and recursively scans all subfolder ACL ACE entries for SID matches in the mapping file specified.  Where non-inherited matches are found they are replaced with the mapping file SID value from the second column.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Convert-SIDHistoryNTFS</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>StartPath</maml:name>
				<maml:description>
					<maml:para>Specifies the root folder where the SID translation will begin.
May be a local or UNC, absolute or relative file path.
May be any NTFS file share platform (Windows, NAS, etc.).
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>MapFile</maml:name>
				<maml:description>
					<maml:para>CSV SID mapping file containing OldSID,NewSID entries.
Looks for SIDMap.csv in the current folder if not specified.
Use the function Export-SIDMapping to create this file.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>ErrorFile</maml:name>
				<maml:description>
					<maml:para>CSV log file for path error output
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ErrorFileXML</maml:name>
				<maml:description>
					<maml:para>XML file for path error output. Use this for detailed error investigation.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>LogFile</maml:name>
				<maml:description>
					<maml:para>Text log file for verbose output.  Must be an absolute file path, not relative.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
				<maml:name>ReportFile</maml:name>
				<maml:description>
					<maml:para>CSV log file documenting all changed SIDs and paths
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Runs without making any changes.  Logs what would change.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Does an ADD instead of REPLACE when converting SID history.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>StartPath</maml:name>
			<maml:description>
				<maml:para>Specifies the root folder where the SID translation will begin.
May be a local or UNC, absolute or relative file path.
May be any NTFS file share platform (Windows, NAS, etc.).
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>MapFile</maml:name>
			<maml:description>
				<maml:para>CSV SID mapping file containing OldSID,NewSID entries.
Looks for SIDMap.csv in the current folder if not specified.
Use the function Export-SIDMapping to create this file.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>ErrorFile</maml:name>
			<maml:description>
				<maml:para>CSV log file for path error output
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>ErrorFileXML</maml:name>
			<maml:description>
				<maml:para>XML file for path error output. Use this for detailed error investigation.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>LogFile</maml:name>
			<maml:description>
				<maml:para>Text log file for verbose output.  Must be an absolute file path, not relative.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>ReportFile</maml:name>
			<maml:description>
				<maml:para>CSV log file documenting all changed SIDs and paths
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Runs without making any changes.  Logs what would change.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Does an ADD instead of REPLACE when converting SID history.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Script takes input from a SID mapping file generated by the function &quot;Export-SIDMapping&quot;.  This must be run first.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>LogFile is a txt file with a verbose record of everything found and changed.
ErrorFile is a CSV listing folders that failed the scan due to access denied, path too long, etc.
ReportFile is a CSV listing all affected folders, old SID, and new SID.  Run with the -WhatIf switch to create this report as an audit of SID history without making changes.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Must run with permissions to edit security on all subfolders in the path specified.
Use the error CSV log to see folders where access is denied under the current credentials.
Most error messages displayed during the run will be capture in the error log with specific paths for investigation.
This script may make changes to your environment when run without the WhatIf switch.
Some backup programs treat ACL changes as a backup trigger.  Coordinate this with your backup administrator.
The CSV report &#39;Both&#39; column indicates when both the OldSID and NewSID entries already exist in the ACL. This can occur when an Add parameter has been used before the WhatIf report was run.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Convert-SIDHistoryNTFS -StartPath \\fileserver\sharename\ -WhatIf
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Convert-SIDHistoryNTFS -StartPath \\fileserver\sharename\
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Convert-SIDHistoryNTFS -StartPath \\fileserver\sharename\ -Add
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 4  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Convert-SIDHistoryNTFS -StartPath D:\folder\ -WhatIf
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 5  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Convert-SIDHistoryNTFS -StartPath D:\folder\
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Export-DomainSIDs</command:name>
		<maml:description>
			<maml:para>This function creates a list of domain SIDs for the forest and trusts.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>DomainSIDs</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function attempts to document all domain SIDs in the forest and across trusts.  Use the output to identify source domains for SID history.  Note that there may be domains in SID history which no longer exist and no longer have discoverable trusts to identify them.  The function follows these steps:
- Gets the SID of the current domain where the script is running.
- For each domain in the forest it gets a list of all trusted domains and their SIDs.
- Gets all forest trusts and their domain SIDs.
- For each trusted forest it gets all of their trusted domain SIDs.
For best results run this function from each root domain across all forest trusts, then manually consolidate the results into a single CSV file and eliminate any duplicates.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-DomainSIDs</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>CSV output file containing Domain SID entries.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>CSV output file containing Domain SID entries.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Function creates a CSV file containing the FQDN and SID of each domain that it finds in the forest and across trusts.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This function uses .NET 3.0 and WMI to collect all data.  Therefore it will run in legacy environments without the need for the PowerShell ActiveDirectory module.
Forest trusts from the root domain will be included.
External trusts will be included for any domain(s) inside the current forest.
External trusts for remote trust partners will not be included.
Trust discovery is limited to one hop due to permissions and lack of transitivity beyond one hop.
Stale trusts will cause timeouts and extend the script run time, but it will finish.
Use the Active Directory Topology Diagrammer (linked below) to draw a picture of all domains and trusts in the forest.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-DomainSIDs
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-DomainSIDs -File C:\output\DomainSIDsForMyForest.csv
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://www.microsoft.com/download/en/details.aspx?id=13380</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Export-SIDHistoryShare</command:name>
		<maml:description>
			<maml:para>This function enumerates shares on a server and then generates a CSV file documenting SID history instances in ACEs on the share ACLs.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>SIDHistoryShare</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function enumerates shares on a server and then generates a CSV file documenting SID history instances in ACEs on the share ACLs.
The output format of the CSV matches the NTFS CSV report so that they can be rolled up into the same database table.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-SIDHistoryShare</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Specifies the Windows server where shares, ACLs, and ACEs will be scanned for SID history.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>MapFile</maml:name>
				<maml:description>
					<maml:para>CSV SID mapping file containing OldSID,NewSID entries.
Looks for SIDMap.csv in the current folder if not specified.
Use the function Export-SIDMapping to create this file.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>ReportFile</maml:name>
				<maml:description>
					<maml:para>CSV log file documenting all SID history ACEs on shares
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>ComputerName</maml:name>
			<maml:description>
				<maml:para>Specifies the Windows server where shares, ACLs, and ACEs will be scanned for SID history.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>MapFile</maml:name>
			<maml:description>
				<maml:para>CSV SID mapping file containing OldSID,NewSID entries.
Looks for SIDMap.csv in the current folder if not specified.
Use the function Export-SIDMapping to create this file.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>ReportFile</maml:name>
			<maml:description>
				<maml:para>CSV log file documenting all SID history ACEs on shares
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Script takes input from a SID mapping file generated by the function &quot;Export-SIDMapping&quot;.  This must be run first.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>ReportFile is a CSV listing shares, old SID, and new SID.  Note that only shares with SID history entries will be reported.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Script must be run with permissions to view security on all shares on the server, otherwise data returned will be incomplete.
This script makes no changes to your environment.
As this script requires WMI it will not work against NAS servers.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-SIDHistoryShare -ComputerName FileServer01
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://blogs.technet.com/b/heyscriptingguy/archive/2011/11/26/use-powershell-to-find-out-who-has-permissions-to-a-share.aspx</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Export-SIDMapping</command:name>
		<maml:description>
			<maml:para>This function builds two Active Directory SIDhistory reports.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>SIDMapping</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function queries Active Directory for SID history in order to build a SID mapping file for use with the ADMT to do security translation, especially in situations where the ADMT database has been lost.  In addition to the mapping file it also generates a full SID history report for viewing in Excel.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-SIDMapping</maml:name>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This function must be run from a machine that has the Active Directory module for PowerShell installed (ie. Windows 7 with RSAT or Windows Server 2008 R2).  You must also have either a Windows Server 2008 R2 domain controller, or an older domain controller with the Active Directory Management Gateway Service (AD Web Service) installed.  For more information on ADWS see:
http://blogs.technet.com/b/ashleymcglone/archive/2011/03/17/step-by-step-how-to-use-active-directory-powershell-cmdlets-against-2003-domain-controllers.aspx
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-SIDMapping</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://blogs.technet.com/b/ashleymcglone/archive/2011/03/17/step-by-step-how-to-use-active-directory-powershell-cmdlets-against-2003-domain-controllers.aspx</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Export-SIDMappingCustom</command:name>
		<maml:description>
			<maml:para>Matches Active Directory objects between two domains and generates a SID
mapping file based on a matching property value.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>SIDMappingCustom</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This allows you to create a SID mapping file for ACL translation
regardless of SID history. This aids in scenarios where no SID history
was used in the migration or the source environment is not simultaneously
accessible for whatever reason (permissions, firewall, etc.).
For example, you could manually recreate users in a new domain with
new IDs following a different naming convention.  Then you could match
them on a common EmployeeID attribute between both environments. The
result would be a SID mapping file with OldSID,NewSID from the two
domains for ACL translation.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-SIDMappingCustom</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>The type of AD objects to use for the SID mapping file.
Must be one of the following:
    User, GlobalGroup, DomainLocalGroup, UniversalGroup
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Property name to match from both old and new domain sources.
This property must have unique values (ie. name, employeeID, etc.).
Property name must be a valid AD attribute of the ObjectType specified.
Property name must be the same between both environments.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>OldServer</maml:name>
				<maml:description>
					<maml:para>Specifies the FQDN of the source domain controller for comparison.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>NewServer</maml:name>
				<maml:description>
					<maml:para>Specifies the FQDN of the destination domain controller for comparison.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>OldCSV</maml:name>
				<maml:description>
					<maml:para>Specifies the CSV file of the source domain for comparison.
The property specified and objectSID must be named columns.
Ignores the parameter ObjectType.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
				<maml:name>NewCSV</maml:name>
				<maml:description>
					<maml:para>Specifies the CSV file of the destination domain for comparison.
The property specified and objectSID must be named columns.
Ignores the parameter ObjectType.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6">
				<maml:name>MapFile</maml:name>
				<maml:description>
					<maml:para>Name of CSV file output.  Defaults to .\SIDMapCustom.csv
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>The type of AD objects to use for the SID mapping file.
Must be one of the following:
    User, GlobalGroup, DomainLocalGroup, UniversalGroup
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Property</maml:name>
			<maml:description>
				<maml:para>Property name to match from both old and new domain sources.
This property must have unique values (ie. name, employeeID, etc.).
Property name must be a valid AD attribute of the ObjectType specified.
Property name must be the same between both environments.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>OldServer</maml:name>
			<maml:description>
				<maml:para>Specifies the FQDN of the source domain controller for comparison.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>NewServer</maml:name>
			<maml:description>
				<maml:para>Specifies the FQDN of the destination domain controller for comparison.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>OldCSV</maml:name>
			<maml:description>
				<maml:para>Specifies the CSV file of the source domain for comparison.
The property specified and objectSID must be named columns.
Ignores the parameter ObjectType.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>NewCSV</maml:name>
			<maml:description>
				<maml:para>Specifies the CSV file of the destination domain for comparison.
The property specified and objectSID must be named columns.
Ignores the parameter ObjectType.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="6">
			<maml:name>MapFile</maml:name>
			<maml:description>
				<maml:para>Name of CSV file output.  Defaults to .\SIDMapCustom.csv
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>CSV file of AD objects -OR- live domain query.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>CSV file of OldSID,NewSID for security translation mapping.
Overwrites any previous version of same name.
This file can be used as input for Convert-SIDHistoryNTFS or the ADMT.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Use lines similar to these to build the CSV files for input:

This will export all users with SID and samAccountName:
C:\PS&gt; Get-ADUser -Filter * -Properties objectSID, samAccountName | Export-CSV .\OldDomainUsers.csv -NoTypeInformation

This will export all users who have an EmployeeID populated:
C:\PS&gt; Get-ADUser -LDAPFilter &#39;(employeeID=*)&#39; -Properties objectSID, EmployeeID | Export-CSV .\OldDomainUsers.csv -NoTypeInformation

This will export all domain local groups:
C:\PS&gt; Get-ADGroup -Filter &quot;groupscope -eq &#39;DomainLocal&#39;&quot; -Properties objectSID, Name | Export-CSV .\OldDomainDLGs.csv -NoTypeInformation

In the Properties parameter you must specify ObjectSID and the name of the property you want to match for the SID mapping.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-SIDMappingCustom -OldServer dc1.olddomain.com
    -NewServer dc1.newdomain.com -ObjectType User -Property EmployeeID
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-SIDMappingCustom -OldCSV .\dlgexport.csv
    -NewServer dc1.newdomain.com -ObjectType DomainLocalGroup -Property Name
    -MapFile .\SIDMap-DLG-Contoso-AlpineSkiHouse.csv
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Export-SIDMappingCustom -OldCSV .\OldUserExport.csv
    -NewServer dc1.newdomain.com -ObjectType User -Property samAccountName
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-ADObjectADSI</command:name>
		<maml:description>
			<maml:para>This is an unsupported function referenced by other functions in the module.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADObjectADSI</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This is used for operating systems prior to Windows Server 2008 R2 where the AD Web Service is not present.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADObjectADSI</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>LDAPQueryString</maml:name>
				<maml:description>
					<maml:para>LDAP filter passed to ADSI.
Defaults to &quot;(&amp;(objectClass=user)(objectCategory=person))&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Properties to retrieve.
Defaults to &quot;objectSID&quot;,&quot;employeeID&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>LDAPQueryString</maml:name>
			<maml:description>
				<maml:para>LDAP filter passed to ADSI.
Defaults to &quot;(&amp;(objectClass=user)(objectCategory=person))&quot;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Properties to retrieve.
Defaults to &quot;objectSID&quot;,&quot;employeeID&quot;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-DomainSIDWordCount</command:name>
		<maml:description>
			<maml:para>This function assists with identifying old domains based on string data in the account DisplayName, Description, and DistinguishedName.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DomainSIDWordCount</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The old domain SID cannot be identified when its trust has been removed.  Often the accounts from the old domain will contain a keyword that references the old domain.  These keywords could appear in the DisplayName, Description, or DistinguishedName (OU path).
This function takes some of the guess work out of identifying these old domains by creating a word count of strings found in these attributes, hoping that will give you clues how to manually update the DomainSIDs.csv file.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DomainSIDWordCount</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>SIDReport</maml:name>
				<maml:description>
					<maml:para>Points to the SIDReportUpdated.csv file generated by the cmdlet Update-SIDMapping.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>SIDReport</maml:name>
			<maml:description>
				<maml:para>Points to the SIDReportUpdated.csv file generated by the cmdlet Update-SIDMapping.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>SIDReportUpdated.csv
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Report of OldDomainSID, Word, Count
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>It is best to pipe this output to a grid view or CSV for ease of use.
This report runs against all OldDomainSIDs regardless of whether they have already been identified.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-DomainSIDWordCount
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-DomainSIDWordCount | Out-GridView
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-DomainSIDWordCount | Export-CSV .\DomainSIDWordCount.csv -NoTypeInformation
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Export-DomainSIDs</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-SIDHistory</command:name>
		<maml:description>
			<maml:para>This function retrieves sIDHistory attribute entries for Active Directory objects.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SIDHistory</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function retrieves sIDHistory attribute entries for Active Directory objects.  Parameter switches can be used individually or in combination to shape the Active Directory query to target specfic objects.
If an object has multiple sIDHistory entries it is not necessary to target all of them at once.  The DomainName and DomainSID parameters can retrieve specific values while ignoring others.  See the parameter help for more information.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-SIDHistory</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DomainName</maml:name>
				<maml:description>
					<maml:para>This is the Fully Qualified Domain Name (FQDN) of the SID history domain to be retrieved.  When using this parameter you must supply a DomainSIDs.csv file created by the function Export-DomainSIDs.  Specify the path to the file using the switch DomainFile.  See the full help for Export-DomainSIDs for more information.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DomainFile</maml:name>
				<maml:description>
					<maml:para>Specifies the path to the DomainSIDs.csv file required by the DomainName parameter.  If omitted this parameter defaults to &quot;.\DomainSIDs.csv&quot;.  This parameter has no effect if the DomainName parameter is omitted.  See the full help for Export-DomainSIDs for more information.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Specific user name, group name, or computer name.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Specifies the name of a group to query for members.
Note that this only returns users who are direct members of the group.
It does not return nested groups or nested group membership.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Specifies an Active Directory path under which to search.  Defaults to the root of the current domain.
    -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specifies the scope of an Active Directory search. Possible values for this parameter are:
    Base or 0
    OneLevel or 1
    Subtree or 2
A Base query searches only the current path or object.
A OneLevel query searches the immediate children of that path or object.
A Subtree query searches the current path or object and all children of that path or object.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectClass</maml:name>
				<maml:description>
					<maml:para>This specifies the Active Directory ObjectClass for the query.  Valid options are:
    user
    computer
    group
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SIDHistory</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DomainSID</maml:name>
				<maml:description>
					<maml:para>This is a string representing the domain portion of the sIDHistory entries to be returned.
Example:
    -DomainSID S-1-5-21-2999376440-943117962-1153441346</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Specific user name, group name, or computer name.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Specifies the name of a group to query for members.
Note that this only returns users who are direct members of the group.
It does not return nested groups or nested group membership.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Specifies an Active Directory path under which to search.  Defaults to the root of the current domain.
    -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specifies the scope of an Active Directory search. Possible values for this parameter are:
    Base or 0
    OneLevel or 1
    Subtree or 2
A Base query searches only the current path or object.
A OneLevel query searches the immediate children of that path or object.
A Subtree query searches the current path or object and all children of that path or object.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectClass</maml:name>
				<maml:description>
					<maml:para>This specifies the Active Directory ObjectClass for the query.  Valid options are:
    user
    computer
    group
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainName</maml:name>
			<maml:description>
				<maml:para>This is the Fully Qualified Domain Name (FQDN) of the SID history domain to be retrieved.  When using this parameter you must supply a DomainSIDs.csv file created by the function Export-DomainSIDs.  Specify the path to the file using the switch DomainFile.  See the full help for Export-DomainSIDs for more information.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainFile</maml:name>
			<maml:description>
				<maml:para>Specifies the path to the DomainSIDs.csv file required by the DomainName parameter.  If omitted this parameter defaults to &quot;.\DomainSIDs.csv&quot;.  This parameter has no effect if the DomainName parameter is omitted.  See the full help for Export-DomainSIDs for more information.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Specific user name, group name, or computer name.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Specifies the name of a group to query for members.
Note that this only returns users who are direct members of the group.
It does not return nested groups or nested group membership.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Specifies an Active Directory path under which to search.  Defaults to the root of the current domain.
    -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specifies the scope of an Active Directory search. Possible values for this parameter are:
    Base or 0
    OneLevel or 1
    Subtree or 2
A Base query searches only the current path or object.
A OneLevel query searches the immediate children of that path or object.
A Subtree query searches the current path or object and all children of that path or object.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ObjectClass</maml:name>
			<maml:description>
				<maml:para>This specifies the Active Directory ObjectClass for the query.  Valid options are:
    user
    computer
    group
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainSID</maml:name>
			<maml:description>
				<maml:para>This is a string representing the domain portion of the sIDHistory entries to be returned.
Example:
    -DomainSID S-1-5-21-2999376440-943117962-1153441346</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Takes a combination of search filters.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Returns distinguishedName and sIDHistory entries matching the criteria.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This function is quite similar to Get-ADObject except for these two features:
    1. It uses ExpandProperty to guarantee a single row for each sIDHistory entry.
    2. It can selectively query sIDHistory based on a domain name.
Note that it is possible to construct a query of mutually exclusive criteria which will give an empty result.
For Example:
    Get-SIDHistory -SamAccountName AccountingUsers -ObjectClass user
In this example the query is looking for a group but specifying the wrong object class.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory -SamAccountName ashleym
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory -DomainName fun.wingtiptoys.local -DomainFile DomainSIDs.csv
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 4  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –DomainName wingtiptoys.com
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 5  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –DomainName wingtiptoys.com –SamAccountName ashleym
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 6  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –DomainSID &quot;S-1-5-21-2371126157-4032412735-3953120161&quot;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 7  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –ObjectClass group
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 8  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –SearchBase &quot;OU=Sales,DC=contoso,DC=com&quot; -SearchScope onelevel
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 9  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –ObjectClass user –SearchBase &quot;OU=Sales,DC=contoso,DC=com&quot; 
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 10  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory –MemberOf MigratedUsers
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 11  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory | Measure-Object
</dev:code>
			<dev:remarks>
				<maml:para>Display count of all user SID history entries.
Note that this is not a user count but a SID history count.  It is possible for accounts to have multiple SID history entries.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SIDHistory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Export-DomainSIDs</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-SIDHistoryDuplicates</command:name>
		<maml:description>
			<maml:para>This function analyzes the SIDReport.csv or SIDReportUpdated.csv file for duplicate OldSID entries.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SIDHistoryDuplicates</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Duplicate SID history entries are an anomoly and should be resolved prior to translating any ACLs.
SID history entries should not have any duplicates.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-SIDHistoryDuplicates</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>MapFile</maml:name>
				<maml:description>
					<maml:para>Path and name of the SIDReport.CSV file generated by the function Export-SIDMapping
    - OR -
Path and name of the SIDReportUpdated.CSV file generated by the function Update-SIDMapping
Defaults to: .\SIDReportUpdated.csv
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>MapFile</maml:name>
			<maml:description>
				<maml:para>Path and name of the SIDReport.CSV file generated by the function Export-SIDMapping
    - OR -
Path and name of the SIDReportUpdated.CSV file generated by the function Update-SIDMapping
Defaults to: .\SIDReportUpdated.csv
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>SIDReport.csv or SIDReportUpdated.csv
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Filtered list containing only rows with duplicate OldSID values.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>For best results pipe the output to Export-CSV or Out-Gridview.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistoryDuplicates
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistoryDuplicates -MapFile &quot;.\SIDReport.csv&quot;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistoryDuplicates | Export-CSV &quot;.\SIDHistoryDuplicates.csv&quot; -NoTypeInformation
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Merge-CSV</command:name>
		<maml:description>
			<maml:para>Combine all CSV files in a folder to a single file.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Merge</command:verb>
		<command:noun>CSV</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function lists all CSV files in the specified path and then rolls them
up into a single CSV file using the specified prefix as the file name.
The intention of this function is that you can use it to roll up multiple CSV
SID history ACL reports into a single file which can then be imported into a
database for analysis.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Merge-CSV</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to the folder where the CSV files reside.
Defaults to the current folder.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Prefix</maml:name>
				<maml:description>
					<maml:para>This string will be prepended to the output file name.
For example:  ACL_SID_History_20120405101500.csv
Defaults to &quot;ACL_SID_History&quot;.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Path to the folder where the CSV files reside.
Defaults to the current folder.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Prefix</maml:name>
			<maml:description>
				<maml:para>This string will be prepended to the output file name.
For example:  ACL_SID_History_20120405101500.csv
Defaults to &quot;ACL_SID_History&quot;.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Function takes optional Path and Prefix switches as described in the full help.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>The output file of combined CSVs will be created in the same path as the combined files.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The function automatically excludes previous generations of the combined CSV file as long as the prefix is the same as the one specified.
Assumptions:
- CSV files do not have type information row.
- All CSV files share the same schema (column layout).
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Merge-CSV
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Merge-CSV -Path &quot;C:\Working Folder\Output Files&quot;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Merge-CSV -Prefix &quot;All_SID_History&quot;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 4  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Merge-CSV -Path &quot;C:\Working Folder\Output Files&quot; -Prefix &quot;All_SID_History&quot;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-SIDHistory</command:name>
		<maml:description>
			<maml:para>This function removes sIDHistory attribute entries for Active Directory objects.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>SIDHistory</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function retrieves an Active Directory object by distinguishedName and then removes the sIDHistory entry specified.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-SIDHistory</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>DistinguishedName</maml:name>
				<maml:description>
					<maml:para>Specifies the Active Directory object for which SID history will be removed.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>SID</maml:name>
				<maml:description>
					<maml:para>Specifies the individual sIDHistory entry to be removed.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>DistinguishedName</maml:name>
			<maml:description>
				<maml:para>Specifies the Active Directory object for which SID history will be removed.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>SID</maml:name>
			<maml:description>
				<maml:para>Specifies the individual sIDHistory entry to be removed.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Function takes two mandatory parameters: DistinguishedName and SID.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>This script outputs three properties: DateModified, Status, DistinguishedName, SID.
Pipe this output to a file or CSV for documentation of the change.
Use the output for troubleshooting the specific time of the change if users are impacted.
PS&gt; Get-SIDHistory -MemberOf TestGroup | Remove-SIDHistory | Export-CSV removed.csv
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Please note that removing SID history may cause significant impact to users if resource ACLs have not been migrated.
Review the ADMT Guide and make sure all migration steps have been completed.
As a backout plan make sure there is a verified system state backup from two DCs per domain.
Use the WhatIf and/or Confirm parameters for testing.
Use Export-SIDHistory to document all SID history in the environment before removing it.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Remove-SIDHistory -DistinguishedName &quot;cn=user1,ou=department,dc=domain,dc=com&quot; -SID S-1-5-21-2999376440-943217962-1153441346-1447
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory -samAccountName user1 | Remove-SIDHistory

</dev:code>
			<dev:remarks>
				<maml:para>The easiest way to use Remove-SIDHistory is by piping the output from Get-SIDHistory.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory -samAccountName user1 | Remove-SIDHistory -WhatIf

</dev:code>
			<dev:remarks>
				<maml:para>Use the WhatIf parameters for testing.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 4  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory -samAccountName user1 | Remove-SIDHistory -Confirm:$true

</dev:code>
			<dev:remarks>
				<maml:para>Use the Confirm parameters for testing.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 5  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SIDHistory -MemberOf TestGroup | Remove-SIDHistory | Export-CSV removed.csv
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SIDHistory</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Search-SIDHistoryACL</command:name>
		<maml:description>
			<maml:para>This function automates the use of &#39;Export-SIDHistoryShare&#39; and &#39;Convert-SIDHistoryNTFS -WhatIf&#39; for scanning large quantities of shares using PowerShell background jobs.
It does not update any ACLs.  It only reports on SID history use in the share paths scanned.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Search</command:verb>
		<command:noun>SIDHistoryACL</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Scan all of the shares in a text file. (Windows servers or NAS)
    - OR -
Scan all of the shares on each server in an OU subtree. (Windows servers only)
Launch each share scan in a separate job for multithreading efficiency.
Output files all have the server and share as part of the file name.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Search-SIDHistoryACL</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OrganizationalUnit</maml:name>
				<maml:description>
					<maml:para>Specifies the OU path for Windows servers to scan.
Enumerates all servers in the OU subtree that have been online in the last 60 days, thus filtering out stale servers.
Computer accounts for non-Windows servers will error out.
Uses WMI to enumerate a list of all manually created shares on each server, and then feeds that into the two functions &#39;Export-SIDHistoryShare&#39; and &#39;Convert-SIDHistoryNTFS -WhatIf&#39;.
This parameter is aliased as &#39;OU&#39;.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Often scanning file shares requires alternate credentials.
Defaults to: Get-Credential
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-SIDHistoryACL</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShareFile</maml:name>
				<maml:description>
					<maml:para>Expects a text file containing a list of shares or paths in either UNC or local absolute path format.
Defaults to: .\shares.txt
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Often scanning file shares requires alternate credentials.
Defaults to: Get-Credential
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OrganizationalUnit</maml:name>
			<maml:description>
				<maml:para>Specifies the OU path for Windows servers to scan.
Enumerates all servers in the OU subtree that have been online in the last 60 days, thus filtering out stale servers.
Computer accounts for non-Windows servers will error out.
Uses WMI to enumerate a list of all manually created shares on each server, and then feeds that into the two functions &#39;Export-SIDHistoryShare&#39; and &#39;Convert-SIDHistoryNTFS -WhatIf&#39;.
This parameter is aliased as &#39;OU&#39;.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Often scanning file shares requires alternate credentials.
Defaults to: Get-Credential
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShareFile</maml:name>
			<maml:description>
				<maml:para>Expects a text file containing a list of shares or paths in either UNC or local absolute path format.
Defaults to: .\shares.txt
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>.\SIDMap.csv
.\shares.txt (or some similar name)
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>LogFile is a txt file with a verbose record of everything found.
ErrorFile is a CSV listing folders that failed the scan due to access denied, path too long, etc.
ReportFile is a CSV listing all affected folders, old SID, and new SID.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>The OrganizationalUnit option calls both &#39;Export-SIDHistoryShare&#39; and &#39;Convert-SIDHistoryNTFS -WhatIf&#39; for each server under the OU specified.
The ShareFile option calls &#39;Convert-SIDHistoryNTFS -WhatIf&#39; for each share path specified in the ShareFile parameter.
The .\SIDMap.CSV file must be in the same path from where the function is called.
This should be used carefully on a server with plenty of RAM, because no real throttling applies based on this simple code. Do not run too many at once.
Once all of the jobs are launched the output files will appear in the local directory.
This function spawns a process window for each job.  Do not close the windows.  They will close automatically when complete.
Use the Watch-Job function to monitor the background job progress and capture the job status results.  Review the job log files to see where errors occurred or jobs failed.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Search-SIDHistoryACL -OrganizationalUnit &apos;OU=FileServers,OU=Servers,OU=na,DC=contoso,DC=com&apos;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $cred = Get-Credential
Search-SIDHistoryACL -OU &apos;OU=FileServers,OU=Servers,OU=na,DC=contoso,DC=com&apos; -Credential $cred
Search-SIDHistoryACL -OU &apos;OU=FileServers,OU=Servers,OU=emea,DC=contoso,DC=com&apos; -Credential $cred
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Search-SIDHistoryACL -ShareFile .\shares.txt
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Export-SIDHistoryShare</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Convert-SIDHistoryNTFS</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Update-SIDMapping</command:name>
		<maml:description>
			<maml:para>This function inserts a SourceDomain column into the SIDReport.csv file.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Update</command:verb>
		<command:noun>SIDMapping</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>This function identifies the old domain name where the SID history originated.
Then it updates the SIDReport.CSV file.  This makes the report more meaningful.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Update-SIDMapping</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>OldReport</maml:name>
				<maml:description>
					<maml:para>Path and name of the SIDReport.CSV file generated by the function Export-SIDMapping.
Defaults to: .\SIDReport.csv
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>NewReport</maml:name>
				<maml:description>
					<maml:para>Path and name for the updated report file.
Defaults to: .\SIDReportUpdated.csv
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>DomainFile</maml:name>
				<maml:description>
					<maml:para>Path and name of the DomainSIDs.csv file generated by the function Export-DomainSIDs.
Defaults to: .\DomainSIDs.csv
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>OldReport</maml:name>
			<maml:description>
				<maml:para>Path and name of the SIDReport.CSV file generated by the function Export-SIDMapping.
Defaults to: .\SIDReport.csv
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>NewReport</maml:name>
			<maml:description>
				<maml:para>Path and name for the updated report file.
Defaults to: .\SIDReportUpdated.csv
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>DomainFile</maml:name>
			<maml:description>
				<maml:para>Path and name of the DomainSIDs.csv file generated by the function Export-DomainSIDs.
Defaults to: .\DomainSIDs.csv
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>SIDReport.csv
DomainSIDs.csv</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>SIDReportUpdated.csv
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Prior to calling this function you need to run Export-DomainSIDs and Export-SIDMapping.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Update-SIDMapping
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Update-SIDMapping -OldReport &quot;C:\SIDReport.csv&quot; -NewReport &quot;C:\SIDReportUpdated.csv&quot; -DomainFile &quot;C:\DomainSIDs.csv&quot;
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Watch-Job</command:name>
		<maml:description>
			<maml:para>This function displays a progress bar for the background job queue and reports on the results when all are complete.
This function is provided to watch the Search-SIDHistoryACL background jobs.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Watch</command:verb>
		<command:noun>Job</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>When all jobs are no longer running it does two things and one optional thing:
1. Receives all of the job output into joblog.txt
2. Exports a CSV report of all job status (complete, failed, start time, end time, command, etc.)
3. If the -Remove switch is used it will remove all of the jobs from the queue
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Watch-Job</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Specifies whether to remove all of the jobs from the queue once finished.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Specifies whether to remove all of the jobs from the queue once finished.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Uses Get-Job to view all jobs in the queue.
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>.\joblog.txt
.\joblog.csv
</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Review the job log files to see where job command errors occurred or jobs failed.
Use the -Remove switch with care.
When finished all of the errors from the jobs will scroll in the console.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Watch-Job
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Watch-Job -Remove
</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Search-SIDHistoryACL</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri>http://aka.ms/SIDHistory</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
</helpItems>